Grammar

    0 $accept: goal $end

    1 goal: START statements END NEWLINE

    2 statements: statements statement
    3           | statement

    4 statement: DOC DOT WRITE OPENPAR arg_list CLOSEPAR separator
    5          | declaration separator
    6          | assignment separator
    7          | if_expression
    8          | loop
    9          | NEWLINE
   10          | BREAK separator
   11          | CONTINUE separator

   12 declaration: VAR ID
   13            | VAR ID EQUAL not_expression
   14            | VAR ID EQUAL object
   15            | VAR ID EQUAL array

   16 assignment: ID EQUAL not_expression
   17           | ID DOT ID EQUAL not_expression
   18           | ID OPENHARD not_expression CLOSEHARD EQUAL not_expression

   19 $@1: /* empty */

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt

   21 $@2: /* empty */

   22 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt

   23 else_opt: ELSE if_expression

   24 $@3: /* empty */

   25 else_opt: ELSE OPENBRACE NEWLINE $@3 statements CLOSEBRACE NEWLINE

   26 $@4: /* empty */

   27 else_opt: ELSE OPENBRACE NEWLINE $@4 CLOSEBRACE NEWLINE
   28         | /* empty */

   29 $@5: /* empty */

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE

   31 $@6: /* empty */

   32 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE

   33 $@7: /* empty */

   34 $@8: /* empty */

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator

   36 $@9: /* empty */

   37 $@10: /* empty */

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

   39 object: OPENBRACE definition_list CLOSEBRACE

   40 array: OPENHARD member_list CLOSEHARD

   41 member_list: member_list COMMA newline_opt not_expression newline_opt
   42            | newline_opt not_expression newline_opt
   43            | /* empty */

   44 definition_list: definition_list COMMA newline_opt definition newline_opt
   45                | newline_opt definition newline_opt
   46                | /* empty */

   47 definition: ID COLON not_expression

   48 newline_opt: newline_opt NEWLINE
   49            | /* empty */

   50 arg_list: arg_list COMMA argument
   51         | argument
   52         | /* empty */

   53 argument: not_expression

   54 not_expression: boolean

   55 boolean: boolean ANDAND condition
   56        | boolean OROR condition
   57        | condition

   58 condition: condition LESS expression
   59          | condition LESSEQUAL expression
   60          | condition GREATER expression
   61          | condition GREATEREQUAL expression
   62          | condition EQUALEQUAL expression
   63          | condition NOTEQUAL expression
   64          | expression

   65 expression: expression '+' factor
   66           | expression '-' factor
   67           | factor

   68 factor: factor '*' token
   69       | factor '/' token
   70       | token

   71 token: ID
   72      | NUM
   73      | QUOTEDSTRING
   74      | BREAKLINE
   75      | OPENPAR not_expression CLOSEPAR
   76      | ID DOT ID
   77      | ID OPENHARD expression CLOSEHARD
   78      | TRUE
   79      | FALSE
   80      | NOT ID
   81      | NOT OPENPAR not_expression CLOSEPAR

   82 separator: NEWLINE
   83          | SEMICOLON


Terminals, with rules where they appear

$end (0) 0
'*' (42) 68
'+' (43) 65
'-' (45) 66
'/' (47) 69
error (256)
ID (258) 12 13 14 15 16 17 18 47 71 76 77 80
QUOTEDSTRING (259) 73
BREAKLINE (260) 74
NUM (261) 72
VAR (262) 12 13 14 15
EQUAL (263) 13 14 15 16 17 18
SEMICOLON (264) 83
NEWLINE (265) 1 9 20 22 25 27 30 32 35 38 48 82
DOC (266) 4
WRITE (267) 4
OPENPAR (268) 4 20 22 30 32 35 38 75 81
CLOSEPAR (269) 4 20 22 30 32 35 38 75 81
COMMA (270) 41 44 50
DOT (271) 4 17 76
START (272) 1
END (273) 1
OPENBRACE (274) 20 22 25 27 30 32 35 38 39
CLOSEBRACE (275) 20 22 25 27 30 32 35 38 39
COLON (276) 47
IF (277) 20 22
ELSE (278) 23 25 27
OROR (279) 56
ANDAND (280) 55
NOT (281) 80 81
LESS (282) 58
LESSEQUAL (283) 59
GREATER (284) 60
GREATEREQUAL (285) 61
EQUALEQUAL (286) 62
NOTEQUAL (287) 63
TRUE (288) 78
FALSE (289) 79
WHILE (290) 30 32 35 38
BREAK (291) 10
CONTINUE (292) 11
DO (293) 35 38
OPENHARD (294) 18 40 77
CLOSEHARD (295) 18 40 77


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
goal (46)
    on left: 1, on right: 0
statements (47)
    on left: 2 3, on right: 1 2 20 25 30 35
statement (48)
    on left: 4 5 6 7 8 9 10 11, on right: 2 3
declaration (49)
    on left: 12 13 14 15, on right: 5
assignment (50)
    on left: 16 17 18, on right: 6
if_expression (51)
    on left: 20 22, on right: 7 23
$@1 (52)
    on left: 19, on right: 20
$@2 (53)
    on left: 21, on right: 22
else_opt (54)
    on left: 23 25 27 28, on right: 20 22
$@3 (55)
    on left: 24, on right: 25
$@4 (56)
    on left: 26, on right: 27
loop (57)
    on left: 30 32 35 38, on right: 8
$@5 (58)
    on left: 29, on right: 30
$@6 (59)
    on left: 31, on right: 32
$@7 (60)
    on left: 33, on right: 35
$@8 (61)
    on left: 34, on right: 35
$@9 (62)
    on left: 36, on right: 38
$@10 (63)
    on left: 37, on right: 38
object (64)
    on left: 39, on right: 14
array (65)
    on left: 40, on right: 15
member_list (66)
    on left: 41 42 43, on right: 40 41
definition_list (67)
    on left: 44 45 46, on right: 39 44
definition (68)
    on left: 47, on right: 44 45
newline_opt (69)
    on left: 48 49, on right: 41 42 44 45 48
arg_list (70)
    on left: 50 51 52, on right: 4 50
argument (71)
    on left: 53, on right: 50 51
not_expression (72)
    on left: 54, on right: 13 16 17 18 20 22 30 32 35 38 41 42 47 53
    75 81
boolean (73)
    on left: 55 56 57, on right: 54 55 56
condition (74)
    on left: 58 59 60 61 62 63 64, on right: 55 56 57 58 59 60 61 62
    63
expression (75)
    on left: 65 66 67, on right: 58 59 60 61 62 63 64 65 66 77
factor (76)
    on left: 68 69 70, on right: 65 66 67 68 69
token (77)
    on left: 71 72 73 74 75 76 77 78 79 80 81, on right: 68 69 70
separator (78)
    on left: 82 83, on right: 4 5 6 10 11 35 38


state 0

    0 $accept: . goal $end

    START  shift, and go to state 1

    goal  go to state 2


state 1

    1 goal: START . statements END NEWLINE

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statements     go to state 12
    statement      go to state 13
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 2

    0 $accept: goal . $end

    $end  shift, and go to state 18


state 3

   16 assignment: ID . EQUAL not_expression
   17           | ID . DOT ID EQUAL not_expression
   18           | ID . OPENHARD not_expression CLOSEHARD EQUAL not_expression

    EQUAL     shift, and go to state 19
    DOT       shift, and go to state 20
    OPENHARD  shift, and go to state 21


state 4

   12 declaration: VAR . ID
   13            | VAR . ID EQUAL not_expression
   14            | VAR . ID EQUAL object
   15            | VAR . ID EQUAL array

    ID  shift, and go to state 22


state 5

    9 statement: NEWLINE .

    $default  reduce using rule 9 (statement)


state 6

    4 statement: DOC . DOT WRITE OPENPAR arg_list CLOSEPAR separator

    DOT  shift, and go to state 23


state 7

   20 if_expression: IF . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt
   22              | IF . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt

    OPENPAR  shift, and go to state 24


state 8

   30 loop: WHILE . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE

    OPENPAR  shift, and go to state 25


state 9

   10 statement: BREAK . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 28


state 10

   11 statement: CONTINUE . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 29


state 11

   35 loop: DO . OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator
   38     | DO . OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    OPENBRACE  shift, and go to state 30


state 12

    1 goal: START statements . END NEWLINE
    2 statements: statements . statement

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    END       shift, and go to state 31
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statement      go to state 32
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 13

    3 statements: statement .

    $default  reduce using rule 3 (statements)


state 14

    5 statement: declaration . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 33


state 15

    6 statement: assignment . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 34


state 16

    7 statement: if_expression .

    $default  reduce using rule 7 (statement)


state 17

    8 statement: loop .

    $default  reduce using rule 8 (statement)


state 18

    0 $accept: goal $end .

    $default  accept


state 19

   16 assignment: ID EQUAL . not_expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 43
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 20

   17 assignment: ID DOT . ID EQUAL not_expression

    ID  shift, and go to state 49


state 21

   18 assignment: ID OPENHARD . not_expression CLOSEHARD EQUAL not_expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 50
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 22

   12 declaration: VAR ID .
   13            | VAR ID . EQUAL not_expression
   14            | VAR ID . EQUAL object
   15            | VAR ID . EQUAL array

    EQUAL  shift, and go to state 51

    $default  reduce using rule 12 (declaration)


state 23

    4 statement: DOC DOT . WRITE OPENPAR arg_list CLOSEPAR separator

    WRITE  shift, and go to state 52


state 24

   20 if_expression: IF OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt
   22              | IF OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 53
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 25

   30 loop: WHILE OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 54
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 26

   83 separator: SEMICOLON .

    $default  reduce using rule 83 (separator)


state 27

   82 separator: NEWLINE .

    $default  reduce using rule 82 (separator)


state 28

   10 statement: BREAK separator .

    $default  reduce using rule 10 (statement)


state 29

   11 statement: CONTINUE separator .

    $default  reduce using rule 11 (statement)


state 30

   35 loop: DO OPENBRACE . NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator
   38     | DO OPENBRACE . NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    NEWLINE  shift, and go to state 55


state 31

    1 goal: START statements END . NEWLINE

    NEWLINE  shift, and go to state 56


state 32

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 33

    5 statement: declaration separator .

    $default  reduce using rule 5 (statement)


state 34

    6 statement: assignment separator .

    $default  reduce using rule 6 (statement)


state 35

   71 token: ID .
   76      | ID . DOT ID
   77      | ID . OPENHARD expression CLOSEHARD

    DOT       shift, and go to state 57
    OPENHARD  shift, and go to state 58

    $default  reduce using rule 71 (token)


state 36

   73 token: QUOTEDSTRING .

    $default  reduce using rule 73 (token)


state 37

   74 token: BREAKLINE .

    $default  reduce using rule 74 (token)


state 38

   72 token: NUM .

    $default  reduce using rule 72 (token)


state 39

   75 token: OPENPAR . not_expression CLOSEPAR

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 59
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 40

   80 token: NOT . ID
   81      | NOT . OPENPAR not_expression CLOSEPAR

    ID       shift, and go to state 60
    OPENPAR  shift, and go to state 61


state 41

   78 token: TRUE .

    $default  reduce using rule 78 (token)


state 42

   79 token: FALSE .

    $default  reduce using rule 79 (token)


state 43

   16 assignment: ID EQUAL not_expression .

    $default  reduce using rule 16 (assignment)


state 44

   54 not_expression: boolean .
   55 boolean: boolean . ANDAND condition
   56        | boolean . OROR condition

    OROR    shift, and go to state 62
    ANDAND  shift, and go to state 63

    $default  reduce using rule 54 (not_expression)


state 45

   57 boolean: condition .
   58 condition: condition . LESS expression
   59          | condition . LESSEQUAL expression
   60          | condition . GREATER expression
   61          | condition . GREATEREQUAL expression
   62          | condition . EQUALEQUAL expression
   63          | condition . NOTEQUAL expression

    LESS          shift, and go to state 64
    LESSEQUAL     shift, and go to state 65
    GREATER       shift, and go to state 66
    GREATEREQUAL  shift, and go to state 67
    EQUALEQUAL    shift, and go to state 68
    NOTEQUAL      shift, and go to state 69

    $default  reduce using rule 57 (boolean)


state 46

   64 condition: expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 64 (condition)


state 47

   67 expression: factor .
   68 factor: factor . '*' token
   69       | factor . '/' token

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 67 (expression)


state 48

   70 factor: token .

    $default  reduce using rule 70 (factor)


state 49

   17 assignment: ID DOT ID . EQUAL not_expression

    EQUAL  shift, and go to state 74


state 50

   18 assignment: ID OPENHARD not_expression . CLOSEHARD EQUAL not_expression

    CLOSEHARD  shift, and go to state 75


state 51

   13 declaration: VAR ID EQUAL . not_expression
   14            | VAR ID EQUAL . object
   15            | VAR ID EQUAL . array

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    OPENBRACE     shift, and go to state 76
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42
    OPENHARD      shift, and go to state 77

    object          go to state 78
    array           go to state 79
    not_expression  go to state 80
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 52

    4 statement: DOC DOT WRITE . OPENPAR arg_list CLOSEPAR separator

    OPENPAR  shift, and go to state 81


state 53

   20 if_expression: IF OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt
   22              | IF OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt

    CLOSEPAR  shift, and go to state 82


state 54

   30 loop: WHILE OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE

    CLOSEPAR  shift, and go to state 83


state 55

   35 loop: DO OPENBRACE NEWLINE . $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator
   38     | DO OPENBRACE NEWLINE . $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    CLOSEBRACE  reduce using rule 36 ($@9)
    $default    reduce using rule 33 ($@7)

    $@7  go to state 84
    $@9  go to state 85


state 56

    1 goal: START statements END NEWLINE .

    $default  reduce using rule 1 (goal)


state 57

   76 token: ID DOT . ID

    ID  shift, and go to state 86


state 58

   77 token: ID OPENHARD . expression CLOSEHARD

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 87
    factor      go to state 47
    token       go to state 48


state 59

   75 token: OPENPAR not_expression . CLOSEPAR

    CLOSEPAR  shift, and go to state 88


state 60

   80 token: NOT ID .

    $default  reduce using rule 80 (token)


state 61

   81 token: NOT OPENPAR . not_expression CLOSEPAR

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 89
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 62

   56 boolean: boolean OROR . condition

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    condition   go to state 90
    expression  go to state 46
    factor      go to state 47
    token       go to state 48


state 63

   55 boolean: boolean ANDAND . condition

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    condition   go to state 91
    expression  go to state 46
    factor      go to state 47
    token       go to state 48


state 64

   58 condition: condition LESS . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 92
    factor      go to state 47
    token       go to state 48


state 65

   59 condition: condition LESSEQUAL . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 93
    factor      go to state 47
    token       go to state 48


state 66

   60 condition: condition GREATER . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 94
    factor      go to state 47
    token       go to state 48


state 67

   61 condition: condition GREATEREQUAL . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 95
    factor      go to state 47
    token       go to state 48


state 68

   62 condition: condition EQUALEQUAL . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 96
    factor      go to state 47
    token       go to state 48


state 69

   63 condition: condition NOTEQUAL . expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    expression  go to state 97
    factor      go to state 47
    token       go to state 48


state 70

   65 expression: expression '+' . factor

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    factor  go to state 98
    token   go to state 48


state 71

   66 expression: expression '-' . factor

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    factor  go to state 99
    token   go to state 48


state 72

   68 factor: factor '*' . token

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    token  go to state 100


state 73

   69 factor: factor '/' . token

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    token  go to state 101


state 74

   17 assignment: ID DOT ID EQUAL . not_expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 102
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 75

   18 assignment: ID OPENHARD not_expression CLOSEHARD . EQUAL not_expression

    EQUAL  shift, and go to state 103


state 76

   39 object: OPENBRACE . definition_list CLOSEBRACE

    ID        reduce using rule 49 (newline_opt)
    NEWLINE   reduce using rule 49 (newline_opt)
    $default  reduce using rule 46 (definition_list)

    definition_list  go to state 104
    newline_opt      go to state 105


state 77

   40 array: OPENHARD . member_list CLOSEHARD

    COMMA      reduce using rule 43 (member_list)
    CLOSEHARD  reduce using rule 43 (member_list)
    $default   reduce using rule 49 (newline_opt)

    member_list  go to state 106
    newline_opt  go to state 107


state 78

   14 declaration: VAR ID EQUAL object .

    $default  reduce using rule 14 (declaration)


state 79

   15 declaration: VAR ID EQUAL array .

    $default  reduce using rule 15 (declaration)


state 80

   13 declaration: VAR ID EQUAL not_expression .

    $default  reduce using rule 13 (declaration)


state 81

    4 statement: DOC DOT WRITE OPENPAR . arg_list CLOSEPAR separator

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    $default  reduce using rule 52 (arg_list)

    arg_list        go to state 108
    argument        go to state 109
    not_expression  go to state 110
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 82

   20 if_expression: IF OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt
   22              | IF OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt

    OPENBRACE  shift, and go to state 111


state 83

   30 loop: WHILE OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE

    OPENBRACE  shift, and go to state 112


state 84

   35 loop: DO OPENBRACE NEWLINE $@7 . statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statements     go to state 113
    statement      go to state 13
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 85

   38 loop: DO OPENBRACE NEWLINE $@9 . CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    CLOSEBRACE  shift, and go to state 114


state 86

   76 token: ID DOT ID .

    $default  reduce using rule 76 (token)


state 87

   65 expression: expression . '+' factor
   66           | expression . '-' factor
   77 token: ID OPENHARD expression . CLOSEHARD

    CLOSEHARD  shift, and go to state 115
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71


state 88

   75 token: OPENPAR not_expression CLOSEPAR .

    $default  reduce using rule 75 (token)


state 89

   81 token: NOT OPENPAR not_expression . CLOSEPAR

    CLOSEPAR  shift, and go to state 116


state 90

   56 boolean: boolean OROR condition .
   58 condition: condition . LESS expression
   59          | condition . LESSEQUAL expression
   60          | condition . GREATER expression
   61          | condition . GREATEREQUAL expression
   62          | condition . EQUALEQUAL expression
   63          | condition . NOTEQUAL expression

    LESS          shift, and go to state 64
    LESSEQUAL     shift, and go to state 65
    GREATER       shift, and go to state 66
    GREATEREQUAL  shift, and go to state 67
    EQUALEQUAL    shift, and go to state 68
    NOTEQUAL      shift, and go to state 69

    $default  reduce using rule 56 (boolean)


state 91

   55 boolean: boolean ANDAND condition .
   58 condition: condition . LESS expression
   59          | condition . LESSEQUAL expression
   60          | condition . GREATER expression
   61          | condition . GREATEREQUAL expression
   62          | condition . EQUALEQUAL expression
   63          | condition . NOTEQUAL expression

    LESS          shift, and go to state 64
    LESSEQUAL     shift, and go to state 65
    GREATER       shift, and go to state 66
    GREATEREQUAL  shift, and go to state 67
    EQUALEQUAL    shift, and go to state 68
    NOTEQUAL      shift, and go to state 69

    $default  reduce using rule 55 (boolean)


state 92

   58 condition: condition LESS expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 58 (condition)


state 93

   59 condition: condition LESSEQUAL expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 59 (condition)


state 94

   60 condition: condition GREATER expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 60 (condition)


state 95

   61 condition: condition GREATEREQUAL expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 61 (condition)


state 96

   62 condition: condition EQUALEQUAL expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 62 (condition)


state 97

   63 condition: condition NOTEQUAL expression .
   65 expression: expression . '+' factor
   66           | expression . '-' factor

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 63 (condition)


state 98

   65 expression: expression '+' factor .
   68 factor: factor . '*' token
   69       | factor . '/' token

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 65 (expression)


state 99

   66 expression: expression '-' factor .
   68 factor: factor . '*' token
   69       | factor . '/' token

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73

    $default  reduce using rule 66 (expression)


state 100

   68 factor: factor '*' token .

    $default  reduce using rule 68 (factor)


state 101

   69 factor: factor '/' token .

    $default  reduce using rule 69 (factor)


state 102

   17 assignment: ID DOT ID EQUAL not_expression .

    $default  reduce using rule 17 (assignment)


state 103

   18 assignment: ID OPENHARD not_expression CLOSEHARD EQUAL . not_expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 117
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 104

   39 object: OPENBRACE definition_list . CLOSEBRACE
   44 definition_list: definition_list . COMMA newline_opt definition newline_opt

    COMMA       shift, and go to state 118
    CLOSEBRACE  shift, and go to state 119


state 105

   45 definition_list: newline_opt . definition newline_opt
   48 newline_opt: newline_opt . NEWLINE

    ID       shift, and go to state 120
    NEWLINE  shift, and go to state 121

    definition  go to state 122


state 106

   40 array: OPENHARD member_list . CLOSEHARD
   41 member_list: member_list . COMMA newline_opt not_expression newline_opt

    COMMA      shift, and go to state 123
    CLOSEHARD  shift, and go to state 124


state 107

   42 member_list: newline_opt . not_expression newline_opt
   48 newline_opt: newline_opt . NEWLINE

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    NEWLINE       shift, and go to state 121
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 125
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 108

    4 statement: DOC DOT WRITE OPENPAR arg_list . CLOSEPAR separator
   50 arg_list: arg_list . COMMA argument

    CLOSEPAR  shift, and go to state 126
    COMMA     shift, and go to state 127


state 109

   51 arg_list: argument .

    $default  reduce using rule 51 (arg_list)


state 110

   53 argument: not_expression .

    $default  reduce using rule 53 (argument)


state 111

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@1 statements CLOSEBRACE else_opt
   22              | IF OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@2 CLOSEBRACE else_opt

    NEWLINE  shift, and go to state 128


state 112

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@6 CLOSEBRACE NEWLINE

    NEWLINE  shift, and go to state 129


state 113

    2 statements: statements . statement
   35 loop: DO OPENBRACE NEWLINE $@7 statements . CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator

    ID          shift, and go to state 3
    VAR         shift, and go to state 4
    NEWLINE     shift, and go to state 5
    DOC         shift, and go to state 6
    CLOSEBRACE  shift, and go to state 130
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    DO          shift, and go to state 11

    statement      go to state 32
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 114

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE . NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    NEWLINE  shift, and go to state 131


state 115

   77 token: ID OPENHARD expression CLOSEHARD .

    $default  reduce using rule 77 (token)


state 116

   81 token: NOT OPENPAR not_expression CLOSEPAR .

    $default  reduce using rule 81 (token)


state 117

   18 assignment: ID OPENHARD not_expression CLOSEHARD EQUAL not_expression .

    $default  reduce using rule 18 (assignment)


state 118

   44 definition_list: definition_list COMMA . newline_opt definition newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 132


state 119

   39 object: OPENBRACE definition_list CLOSEBRACE .

    $default  reduce using rule 39 (object)


state 120

   47 definition: ID . COLON not_expression

    COLON  shift, and go to state 133


state 121

   48 newline_opt: newline_opt NEWLINE .

    $default  reduce using rule 48 (newline_opt)


state 122

   45 definition_list: newline_opt definition . newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 134


state 123

   41 member_list: member_list COMMA . newline_opt not_expression newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 135


state 124

   40 array: OPENHARD member_list CLOSEHARD .

    $default  reduce using rule 40 (array)


state 125

   42 member_list: newline_opt not_expression . newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 136


state 126

    4 statement: DOC DOT WRITE OPENPAR arg_list CLOSEPAR . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 137


state 127

   50 arg_list: arg_list COMMA . argument

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    argument        go to state 138
    not_expression  go to state 110
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 128

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@1 statements CLOSEBRACE else_opt
   22              | IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@2 CLOSEBRACE else_opt

    CLOSEBRACE  reduce using rule 21 ($@2)
    $default    reduce using rule 19 ($@1)

    $@1  go to state 139
    $@2  go to state 140


state 129

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@5 statements CLOSEBRACE NEWLINE
   32     | WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@6 CLOSEBRACE NEWLINE

    CLOSEBRACE  reduce using rule 31 ($@6)
    $default    reduce using rule 29 ($@5)

    $@5  go to state 141
    $@6  go to state 142


state 130

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE . NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator

    NEWLINE  shift, and go to state 143


state 131

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE . $@10 WHILE OPENPAR not_expression CLOSEPAR separator

    $default  reduce using rule 37 ($@10)

    $@10  go to state 144


state 132

   44 definition_list: definition_list COMMA newline_opt . definition newline_opt
   48 newline_opt: newline_opt . NEWLINE

    ID       shift, and go to state 120
    NEWLINE  shift, and go to state 121

    definition  go to state 145


state 133

   47 definition: ID COLON . not_expression

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 146
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 134

   45 definition_list: newline_opt definition newline_opt .
   48 newline_opt: newline_opt . NEWLINE

    NEWLINE  shift, and go to state 121

    $default  reduce using rule 45 (definition_list)


state 135

   41 member_list: member_list COMMA newline_opt . not_expression newline_opt
   48 newline_opt: newline_opt . NEWLINE

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    NEWLINE       shift, and go to state 121
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 147
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 136

   42 member_list: newline_opt not_expression newline_opt .
   48 newline_opt: newline_opt . NEWLINE

    NEWLINE  shift, and go to state 121

    $default  reduce using rule 42 (member_list)


state 137

    4 statement: DOC DOT WRITE OPENPAR arg_list CLOSEPAR separator .

    $default  reduce using rule 4 (statement)


state 138

   50 arg_list: arg_list COMMA argument .

    $default  reduce using rule 50 (arg_list)


state 139

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 . statements CLOSEBRACE else_opt

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statements     go to state 148
    statement      go to state 13
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 140

   22 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 . CLOSEBRACE else_opt

    CLOSEBRACE  shift, and go to state 149


state 141

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 . statements CLOSEBRACE NEWLINE

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statements     go to state 150
    statement      go to state 13
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 142

   32 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 . CLOSEBRACE NEWLINE

    CLOSEBRACE  shift, and go to state 151


state 143

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE . $@8 WHILE OPENPAR not_expression CLOSEPAR separator

    $default  reduce using rule 34 ($@8)

    $@8  go to state 152


state 144

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 . WHILE OPENPAR not_expression CLOSEPAR separator

    WHILE  shift, and go to state 153


state 145

   44 definition_list: definition_list COMMA newline_opt definition . newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 154


state 146

   47 definition: ID COLON not_expression .

    $default  reduce using rule 47 (definition)


state 147

   41 member_list: member_list COMMA newline_opt not_expression . newline_opt

    $default  reduce using rule 49 (newline_opt)

    newline_opt  go to state 155


state 148

    2 statements: statements . statement
   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements . CLOSEBRACE else_opt

    ID          shift, and go to state 3
    VAR         shift, and go to state 4
    NEWLINE     shift, and go to state 5
    DOC         shift, and go to state 6
    CLOSEBRACE  shift, and go to state 156
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    DO          shift, and go to state 11

    statement      go to state 32
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 149

   22 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE . else_opt

    ELSE  shift, and go to state 157

    $default  reduce using rule 28 (else_opt)

    else_opt  go to state 158


state 150

    2 statements: statements . statement
   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements . CLOSEBRACE NEWLINE

    ID          shift, and go to state 3
    VAR         shift, and go to state 4
    NEWLINE     shift, and go to state 5
    DOC         shift, and go to state 6
    CLOSEBRACE  shift, and go to state 159
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    DO          shift, and go to state 11

    statement      go to state 32
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 151

   32 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE . NEWLINE

    NEWLINE  shift, and go to state 160


state 152

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 . WHILE OPENPAR not_expression CLOSEPAR separator

    WHILE  shift, and go to state 161


state 153

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE . OPENPAR not_expression CLOSEPAR separator

    OPENPAR  shift, and go to state 162


state 154

   44 definition_list: definition_list COMMA newline_opt definition newline_opt .
   48 newline_opt: newline_opt . NEWLINE

    NEWLINE  shift, and go to state 121

    $default  reduce using rule 44 (definition_list)


state 155

   41 member_list: member_list COMMA newline_opt not_expression newline_opt .
   48 newline_opt: newline_opt . NEWLINE

    NEWLINE  shift, and go to state 121

    $default  reduce using rule 41 (member_list)


state 156

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE . else_opt

    ELSE  shift, and go to state 157

    $default  reduce using rule 28 (else_opt)

    else_opt  go to state 163


state 157

   23 else_opt: ELSE . if_expression
   25         | ELSE . OPENBRACE NEWLINE $@3 statements CLOSEBRACE NEWLINE
   27         | ELSE . OPENBRACE NEWLINE $@4 CLOSEBRACE NEWLINE

    OPENBRACE  shift, and go to state 164
    IF         shift, and go to state 7

    if_expression  go to state 165


state 158

   22 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt .

    $default  reduce using rule 22 (if_expression)


state 159

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE . NEWLINE

    NEWLINE  shift, and go to state 166


state 160

   32 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE .

    $default  reduce using rule 32 (loop)


state 161

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE . OPENPAR not_expression CLOSEPAR separator

    OPENPAR  shift, and go to state 167


state 162

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR . not_expression CLOSEPAR separator

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 168
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 163

   20 if_expression: IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt .

    $default  reduce using rule 20 (if_expression)


state 164

   25 else_opt: ELSE OPENBRACE . NEWLINE $@3 statements CLOSEBRACE NEWLINE
   27         | ELSE OPENBRACE . NEWLINE $@4 CLOSEBRACE NEWLINE

    NEWLINE  shift, and go to state 169


state 165

   23 else_opt: ELSE if_expression .

    $default  reduce using rule 23 (else_opt)


state 166

   30 loop: WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE .

    $default  reduce using rule 30 (loop)


state 167

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR . not_expression CLOSEPAR separator

    ID            shift, and go to state 35
    QUOTEDSTRING  shift, and go to state 36
    BREAKLINE     shift, and go to state 37
    NUM           shift, and go to state 38
    OPENPAR       shift, and go to state 39
    NOT           shift, and go to state 40
    TRUE          shift, and go to state 41
    FALSE         shift, and go to state 42

    not_expression  go to state 170
    boolean         go to state 44
    condition       go to state 45
    expression      go to state 46
    factor          go to state 47
    token           go to state 48


state 168

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression . CLOSEPAR separator

    CLOSEPAR  shift, and go to state 171


state 169

   25 else_opt: ELSE OPENBRACE NEWLINE . $@3 statements CLOSEBRACE NEWLINE
   27         | ELSE OPENBRACE NEWLINE . $@4 CLOSEBRACE NEWLINE

    CLOSEBRACE  reduce using rule 26 ($@4)
    $default    reduce using rule 24 ($@3)

    $@3  go to state 172
    $@4  go to state 173


state 170

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression . CLOSEPAR separator

    CLOSEPAR  shift, and go to state 174


state 171

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 175


state 172

   25 else_opt: ELSE OPENBRACE NEWLINE $@3 . statements CLOSEBRACE NEWLINE

    ID        shift, and go to state 3
    VAR       shift, and go to state 4
    NEWLINE   shift, and go to state 5
    DOC       shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    BREAK     shift, and go to state 9
    CONTINUE  shift, and go to state 10
    DO        shift, and go to state 11

    statements     go to state 176
    statement      go to state 13
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 173

   27 else_opt: ELSE OPENBRACE NEWLINE $@4 . CLOSEBRACE NEWLINE

    CLOSEBRACE  shift, and go to state 177


state 174

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR . separator

    SEMICOLON  shift, and go to state 26
    NEWLINE    shift, and go to state 27

    separator  go to state 178


state 175

   38 loop: DO OPENBRACE NEWLINE $@9 CLOSEBRACE NEWLINE $@10 WHILE OPENPAR not_expression CLOSEPAR separator .

    $default  reduce using rule 38 (loop)


state 176

    2 statements: statements . statement
   25 else_opt: ELSE OPENBRACE NEWLINE $@3 statements . CLOSEBRACE NEWLINE

    ID          shift, and go to state 3
    VAR         shift, and go to state 4
    NEWLINE     shift, and go to state 5
    DOC         shift, and go to state 6
    CLOSEBRACE  shift, and go to state 179
    IF          shift, and go to state 7
    WHILE       shift, and go to state 8
    BREAK       shift, and go to state 9
    CONTINUE    shift, and go to state 10
    DO          shift, and go to state 11

    statement      go to state 32
    declaration    go to state 14
    assignment     go to state 15
    if_expression  go to state 16
    loop           go to state 17


state 177

   27 else_opt: ELSE OPENBRACE NEWLINE $@4 CLOSEBRACE . NEWLINE

    NEWLINE  shift, and go to state 180


state 178

   35 loop: DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator .

    $default  reduce using rule 35 (loop)


state 179

   25 else_opt: ELSE OPENBRACE NEWLINE $@3 statements CLOSEBRACE . NEWLINE

    NEWLINE  shift, and go to state 181


state 180

   27 else_opt: ELSE OPENBRACE NEWLINE $@4 CLOSEBRACE NEWLINE .

    $default  reduce using rule 27 (else_opt)


state 181

   25 else_opt: ELSE OPENBRACE NEWLINE $@3 statements CLOSEBRACE NEWLINE .

    $default  reduce using rule 25 (else_opt)
