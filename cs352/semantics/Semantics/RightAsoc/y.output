State 10 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program expr '\n'
    2        | /* empty */

    3 expr: expr '+' term
    4     | term '-' expr
    5     | term

    6 term: INTEGER


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'+' (43) 3
'-' (45) 4
error (256)
INTEGER (258) 6


Nonterminals, with rules where they appear

$accept (7)
    on left: 0
program (8)
    on left: 1 2, on right: 0 1
expr (9)
    on left: 3 4 5, on right: 1 3 4
term (10)
    on left: 6, on right: 3 4 5


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . expr '\n'

    $end     shift, and go to state 2
    INTEGER  shift, and go to state 3

    expr  go to state 4
    term  go to state 5


state 2

    0 $accept: program $end .

    $default  accept


state 3

    6 term: INTEGER .

    $default  reduce using rule 6 (term)


state 4

    1 program: program expr . '\n'
    3 expr: expr . '+' term

    '\n'  shift, and go to state 6
    '+'   shift, and go to state 7


state 5

    4 expr: term . '-' expr
    5     | term .

    '-'  shift, and go to state 8

    $default  reduce using rule 5 (expr)


state 6

    1 program: program expr '\n' .

    $default  reduce using rule 1 (program)


state 7

    3 expr: expr '+' . term

    INTEGER  shift, and go to state 3

    term  go to state 9


state 8

    4 expr: term '-' . expr

    INTEGER  shift, and go to state 3

    expr  go to state 10
    term  go to state 5


state 9

    3 expr: expr '+' term .

    $default  reduce using rule 3 (expr)


state 10

    3 expr: expr . '+' term
    4     | term '-' expr .

    '+'  shift, and go to state 7

    '+'       [reduce using rule 4 (expr)]
    $default  reduce using rule 4 (expr)
