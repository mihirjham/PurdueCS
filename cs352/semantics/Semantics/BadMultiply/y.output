Terminals which are not used

   ID


Grammar

    0 $accept: program $end

    1 program: program expr '\n'
    2        | /* empty */

    3 expr: expr '+' term
    4     | expr '-' term
    5     | expr '*' term
    6     | expr '/' term
    7     | term

    8 term: '(' expr ')'
    9     | INT


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'(' (40) 8
')' (41) 8
'*' (42) 5
'+' (43) 3
'-' (45) 4
'/' (47) 6
error (256)
ID (258)
INT (259) 9


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
program (13)
    on left: 1 2, on right: 0 1
expr (14)
    on left: 3 4 5 6 7, on right: 1 3 4 5 6 8
term (15)
    on left: 8 9, on right: 3 4 5 6 7


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . expr '\n'

    $end  shift, and go to state 2
    INT   shift, and go to state 3
    '('   shift, and go to state 4

    expr  go to state 5
    term  go to state 6


state 2

    0 $accept: program $end .

    $default  accept


state 3

    9 term: INT .

    $default  reduce using rule 9 (term)


state 4

    8 term: '(' . expr ')'

    INT  shift, and go to state 3
    '('  shift, and go to state 4

    expr  go to state 7
    term  go to state 6


state 5

    1 program: program expr . '\n'
    3 expr: expr . '+' term
    4     | expr . '-' term
    5     | expr . '*' term
    6     | expr . '/' term

    '\n'  shift, and go to state 8
    '+'   shift, and go to state 9
    '-'   shift, and go to state 10
    '*'   shift, and go to state 11
    '/'   shift, and go to state 12


state 6

    7 expr: term .

    $default  reduce using rule 7 (expr)


state 7

    3 expr: expr . '+' term
    4     | expr . '-' term
    5     | expr . '*' term
    6     | expr . '/' term
    8 term: '(' expr . ')'

    '+'  shift, and go to state 9
    '-'  shift, and go to state 10
    '*'  shift, and go to state 11
    '/'  shift, and go to state 12
    ')'  shift, and go to state 13


state 8

    1 program: program expr '\n' .

    $default  reduce using rule 1 (program)


state 9

    3 expr: expr '+' . term

    INT  shift, and go to state 3
    '('  shift, and go to state 4

    term  go to state 14


state 10

    4 expr: expr '-' . term

    INT  shift, and go to state 3
    '('  shift, and go to state 4

    term  go to state 15


state 11

    5 expr: expr '*' . term

    INT  shift, and go to state 3
    '('  shift, and go to state 4

    term  go to state 16


state 12

    6 expr: expr '/' . term

    INT  shift, and go to state 3
    '('  shift, and go to state 4

    term  go to state 17


state 13

    8 term: '(' expr ')' .

    $default  reduce using rule 8 (term)


state 14

    3 expr: expr '+' term .

    $default  reduce using rule 3 (expr)


state 15

    4 expr: expr '-' term .

    $default  reduce using rule 4 (expr)


state 16

    5 expr: expr '*' term .

    $default  reduce using rule 5 (expr)


state 17

    6 expr: expr '/' term .

    $default  reduce using rule 6 (expr)
