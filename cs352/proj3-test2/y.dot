digraph Automaton {
  0 [label="0\n$accept -> . goal $end"]
  0 -> 1 [style=solid label="START"]
  0 -> 2 [style=dashed label="goal"]
  1 [label="1\ngoal -> START . statements END NEWLINE"]
  1 -> 3 [style=solid label="ID"]
  1 -> 4 [style=solid label="VAR"]
  1 -> 5 [style=solid label="NEWLINE"]
  1 -> 6 [style=solid label="DOC"]
  1 -> 7 [style=solid label="IF"]
  1 -> 8 [style=solid label="WHILE"]
  1 -> 9 [style=solid label="BREAK"]
  1 -> 10 [style=solid label="CONTINUE"]
  1 -> 11 [style=solid label="DO"]
  1 -> 12 [style=dashed label="statements"]
  1 -> 13 [style=dashed label="statement"]
  1 -> 14 [style=dashed label="declaration"]
  1 -> 15 [style=dashed label="assignment"]
  1 -> 16 [style=dashed label="if_expression"]
  1 -> 17 [style=dashed label="loop"]
  2 [label="2\n$accept -> goal . $end"]
  2 -> 18 [style=solid label="$end"]
  3 [label="3\nassignment -> ID . EQUAL not_expression\nassignment -> ID . DOT ID EQUAL not_expression\nassignment -> ID . OPENHARD not_expression CLOSEHARD EQUAL not_expression"]
  3 -> 19 [style=solid label="EQUAL"]
  3 -> 20 [style=solid label="DOT"]
  3 -> 21 [style=solid label="OPENHARD"]
  4 [label="4\ndeclaration -> VAR . ID\ndeclaration -> VAR . ID EQUAL not_expression\ndeclaration -> VAR . ID EQUAL object\ndeclaration -> VAR . ID EQUAL array"]
  4 -> 22 [style=solid label="ID"]
  5 [label="5\nstatement -> NEWLINE ."]
  6 [label="6\nstatement -> DOC . DOT WRITE OPENPAR arg_list CLOSEPAR separator"]
  6 -> 23 [style=solid label="DOT"]
  7 [label="7\nif_expression -> IF . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt\nif_expression -> IF . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt"]
  7 -> 24 [style=solid label="OPENPAR"]
  8 [label="8\nloop -> WHILE . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE . OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE"]
  8 -> 25 [style=solid label="OPENPAR"]
  9 [label="9\nstatement -> BREAK . separator"]
  9 -> 26 [style=solid label="SEMICOLON"]
  9 -> 27 [style=solid label="NEWLINE"]
  9 -> 28 [style=dashed label="separator"]
  10 [label="10\nstatement -> CONTINUE . separator"]
  10 -> 26 [style=solid label="SEMICOLON"]
  10 -> 27 [style=solid label="NEWLINE"]
  10 -> 29 [style=dashed label="separator"]
  11 [label="11\nloop -> DO . OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  11 -> 30 [style=solid label="OPENBRACE"]
  12 [label="12\ngoal -> START statements . END NEWLINE\nstatements -> statements . statement"]
  12 -> 3 [style=solid label="ID"]
  12 -> 4 [style=solid label="VAR"]
  12 -> 5 [style=solid label="NEWLINE"]
  12 -> 6 [style=solid label="DOC"]
  12 -> 31 [style=solid label="END"]
  12 -> 7 [style=solid label="IF"]
  12 -> 8 [style=solid label="WHILE"]
  12 -> 9 [style=solid label="BREAK"]
  12 -> 10 [style=solid label="CONTINUE"]
  12 -> 11 [style=solid label="DO"]
  12 -> 32 [style=dashed label="statement"]
  12 -> 14 [style=dashed label="declaration"]
  12 -> 15 [style=dashed label="assignment"]
  12 -> 16 [style=dashed label="if_expression"]
  12 -> 17 [style=dashed label="loop"]
  13 [label="13\nstatements -> statement ."]
  14 [label="14\nstatement -> declaration . separator"]
  14 -> 26 [style=solid label="SEMICOLON"]
  14 -> 27 [style=solid label="NEWLINE"]
  14 -> 33 [style=dashed label="separator"]
  15 [label="15\nstatement -> assignment . separator"]
  15 -> 26 [style=solid label="SEMICOLON"]
  15 -> 27 [style=solid label="NEWLINE"]
  15 -> 34 [style=dashed label="separator"]
  16 [label="16\nstatement -> if_expression ."]
  17 [label="17\nstatement -> loop ."]
  18 [label="18\n$accept -> goal $end ."]
  19 [label="19\nassignment -> ID EQUAL . not_expression"]
  19 -> 35 [style=solid label="ID"]
  19 -> 36 [style=solid label="QUOTEDSTRING"]
  19 -> 37 [style=solid label="BREAKLINE"]
  19 -> 38 [style=solid label="NUM"]
  19 -> 39 [style=solid label="OPENPAR"]
  19 -> 40 [style=solid label="NOT"]
  19 -> 41 [style=solid label="TRUE"]
  19 -> 42 [style=solid label="FALSE"]
  19 -> 43 [style=dashed label="not_expression"]
  19 -> 44 [style=dashed label="boolean"]
  19 -> 45 [style=dashed label="condition"]
  19 -> 46 [style=dashed label="expression"]
  19 -> 47 [style=dashed label="factor"]
  19 -> 48 [style=dashed label="token"]
  20 [label="20\nassignment -> ID DOT . ID EQUAL not_expression"]
  20 -> 49 [style=solid label="ID"]
  21 [label="21\nassignment -> ID OPENHARD . not_expression CLOSEHARD EQUAL not_expression"]
  21 -> 35 [style=solid label="ID"]
  21 -> 36 [style=solid label="QUOTEDSTRING"]
  21 -> 37 [style=solid label="BREAKLINE"]
  21 -> 38 [style=solid label="NUM"]
  21 -> 39 [style=solid label="OPENPAR"]
  21 -> 40 [style=solid label="NOT"]
  21 -> 41 [style=solid label="TRUE"]
  21 -> 42 [style=solid label="FALSE"]
  21 -> 50 [style=dashed label="not_expression"]
  21 -> 44 [style=dashed label="boolean"]
  21 -> 45 [style=dashed label="condition"]
  21 -> 46 [style=dashed label="expression"]
  21 -> 47 [style=dashed label="factor"]
  21 -> 48 [style=dashed label="token"]
  22 [label="22\ndeclaration -> VAR ID .\ndeclaration -> VAR ID . EQUAL not_expression\ndeclaration -> VAR ID . EQUAL object\ndeclaration -> VAR ID . EQUAL array"]
  22 -> 51 [style=solid label="EQUAL"]
  23 [label="23\nstatement -> DOC DOT . WRITE OPENPAR arg_list CLOSEPAR separator"]
  23 -> 52 [style=solid label="WRITE"]
  24 [label="24\nif_expression -> IF OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt\nif_expression -> IF OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt"]
  24 -> 35 [style=solid label="ID"]
  24 -> 36 [style=solid label="QUOTEDSTRING"]
  24 -> 37 [style=solid label="BREAKLINE"]
  24 -> 38 [style=solid label="NUM"]
  24 -> 39 [style=solid label="OPENPAR"]
  24 -> 40 [style=solid label="NOT"]
  24 -> 41 [style=solid label="TRUE"]
  24 -> 42 [style=solid label="FALSE"]
  24 -> 53 [style=dashed label="not_expression"]
  24 -> 44 [style=dashed label="boolean"]
  24 -> 45 [style=dashed label="condition"]
  24 -> 46 [style=dashed label="expression"]
  24 -> 47 [style=dashed label="factor"]
  24 -> 48 [style=dashed label="token"]
  25 [label="25\nloop -> WHILE OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE OPENPAR . not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE"]
  25 -> 35 [style=solid label="ID"]
  25 -> 36 [style=solid label="QUOTEDSTRING"]
  25 -> 37 [style=solid label="BREAKLINE"]
  25 -> 38 [style=solid label="NUM"]
  25 -> 39 [style=solid label="OPENPAR"]
  25 -> 40 [style=solid label="NOT"]
  25 -> 41 [style=solid label="TRUE"]
  25 -> 42 [style=solid label="FALSE"]
  25 -> 54 [style=dashed label="not_expression"]
  25 -> 44 [style=dashed label="boolean"]
  25 -> 45 [style=dashed label="condition"]
  25 -> 46 [style=dashed label="expression"]
  25 -> 47 [style=dashed label="factor"]
  25 -> 48 [style=dashed label="token"]
  26 [label="26\nseparator -> SEMICOLON ."]
  27 [label="27\nseparator -> NEWLINE ."]
  28 [label="28\nstatement -> BREAK separator ."]
  29 [label="29\nstatement -> CONTINUE separator ."]
  30 [label="30\nloop -> DO OPENBRACE . NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  30 -> 55 [style=solid label="NEWLINE"]
  31 [label="31\ngoal -> START statements END . NEWLINE"]
  31 -> 56 [style=solid label="NEWLINE"]
  32 [label="32\nstatements -> statements statement ."]
  33 [label="33\nstatement -> declaration separator ."]
  34 [label="34\nstatement -> assignment separator ."]
  35 [label="35\ntoken -> ID .\ntoken -> ID . DOT ID\ntoken -> ID . OPENHARD expression CLOSEHARD"]
  35 -> 57 [style=solid label="DOT"]
  35 -> 58 [style=solid label="OPENHARD"]
  36 [label="36\ntoken -> QUOTEDSTRING ."]
  37 [label="37\ntoken -> BREAKLINE ."]
  38 [label="38\ntoken -> NUM ."]
  39 [label="39\ntoken -> OPENPAR . not_expression CLOSEPAR"]
  39 -> 35 [style=solid label="ID"]
  39 -> 36 [style=solid label="QUOTEDSTRING"]
  39 -> 37 [style=solid label="BREAKLINE"]
  39 -> 38 [style=solid label="NUM"]
  39 -> 39 [style=solid label="OPENPAR"]
  39 -> 40 [style=solid label="NOT"]
  39 -> 41 [style=solid label="TRUE"]
  39 -> 42 [style=solid label="FALSE"]
  39 -> 59 [style=dashed label="not_expression"]
  39 -> 44 [style=dashed label="boolean"]
  39 -> 45 [style=dashed label="condition"]
  39 -> 46 [style=dashed label="expression"]
  39 -> 47 [style=dashed label="factor"]
  39 -> 48 [style=dashed label="token"]
  40 [label="40\ntoken -> NOT . ID\ntoken -> NOT . OPENPAR not_expression CLOSEPAR"]
  40 -> 60 [style=solid label="ID"]
  40 -> 61 [style=solid label="OPENPAR"]
  41 [label="41\ntoken -> TRUE ."]
  42 [label="42\ntoken -> FALSE ."]
  43 [label="43\nassignment -> ID EQUAL not_expression ."]
  44 [label="44\nnot_expression -> boolean .\nboolean -> boolean . ANDAND condition\nboolean -> boolean . OROR condition"]
  44 -> 62 [style=solid label="OROR"]
  44 -> 63 [style=solid label="ANDAND"]
  45 [label="45\nboolean -> condition .\ncondition -> condition . LESS expression\ncondition -> condition . LESSEQUAL expression\ncondition -> condition . GREATER expression\ncondition -> condition . GREATEREQUAL expression\ncondition -> condition . EQUALEQUAL expression\ncondition -> condition . NOTEQUAL expression"]
  45 -> 64 [style=solid label="LESS"]
  45 -> 65 [style=solid label="LESSEQUAL"]
  45 -> 66 [style=solid label="GREATER"]
  45 -> 67 [style=solid label="GREATEREQUAL"]
  45 -> 68 [style=solid label="EQUALEQUAL"]
  45 -> 69 [style=solid label="NOTEQUAL"]
  46 [label="46\ncondition -> expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  46 -> 70 [style=solid label="'+'"]
  46 -> 71 [style=solid label="'-'"]
  47 [label="47\nexpression -> factor .\nfactor -> factor . '*' token\nfactor -> factor . '/' token"]
  47 -> 72 [style=solid label="'*'"]
  47 -> 73 [style=solid label="'/'"]
  48 [label="48\nfactor -> token ."]
  49 [label="49\nassignment -> ID DOT ID . EQUAL not_expression"]
  49 -> 74 [style=solid label="EQUAL"]
  50 [label="50\nassignment -> ID OPENHARD not_expression . CLOSEHARD EQUAL not_expression"]
  50 -> 75 [style=solid label="CLOSEHARD"]
  51 [label="51\ndeclaration -> VAR ID EQUAL . not_expression\ndeclaration -> VAR ID EQUAL . object\ndeclaration -> VAR ID EQUAL . array"]
  51 -> 35 [style=solid label="ID"]
  51 -> 36 [style=solid label="QUOTEDSTRING"]
  51 -> 37 [style=solid label="BREAKLINE"]
  51 -> 38 [style=solid label="NUM"]
  51 -> 39 [style=solid label="OPENPAR"]
  51 -> 76 [style=solid label="OPENBRACE"]
  51 -> 40 [style=solid label="NOT"]
  51 -> 41 [style=solid label="TRUE"]
  51 -> 42 [style=solid label="FALSE"]
  51 -> 77 [style=solid label="OPENHARD"]
  51 -> 78 [style=dashed label="object"]
  51 -> 79 [style=dashed label="array"]
  51 -> 80 [style=dashed label="not_expression"]
  51 -> 44 [style=dashed label="boolean"]
  51 -> 45 [style=dashed label="condition"]
  51 -> 46 [style=dashed label="expression"]
  51 -> 47 [style=dashed label="factor"]
  51 -> 48 [style=dashed label="token"]
  52 [label="52\nstatement -> DOC DOT WRITE . OPENPAR arg_list CLOSEPAR separator"]
  52 -> 81 [style=solid label="OPENPAR"]
  53 [label="53\nif_expression -> IF OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt\nif_expression -> IF OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt"]
  53 -> 82 [style=solid label="CLOSEPAR"]
  54 [label="54\nloop -> WHILE OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE OPENPAR not_expression . CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE"]
  54 -> 83 [style=solid label="CLOSEPAR"]
  55 [label="55\nloop -> DO OPENBRACE NEWLINE . $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  55 -> 84 [style=dashed label="$@7"]
  56 [label="56\ngoal -> START statements END NEWLINE ."]
  57 [label="57\ntoken -> ID DOT . ID"]
  57 -> 85 [style=solid label="ID"]
  58 [label="58\ntoken -> ID OPENHARD . expression CLOSEHARD"]
  58 -> 35 [style=solid label="ID"]
  58 -> 36 [style=solid label="QUOTEDSTRING"]
  58 -> 37 [style=solid label="BREAKLINE"]
  58 -> 38 [style=solid label="NUM"]
  58 -> 39 [style=solid label="OPENPAR"]
  58 -> 40 [style=solid label="NOT"]
  58 -> 41 [style=solid label="TRUE"]
  58 -> 42 [style=solid label="FALSE"]
  58 -> 86 [style=dashed label="expression"]
  58 -> 47 [style=dashed label="factor"]
  58 -> 48 [style=dashed label="token"]
  59 [label="59\ntoken -> OPENPAR not_expression . CLOSEPAR"]
  59 -> 87 [style=solid label="CLOSEPAR"]
  60 [label="60\ntoken -> NOT ID ."]
  61 [label="61\ntoken -> NOT OPENPAR . not_expression CLOSEPAR"]
  61 -> 35 [style=solid label="ID"]
  61 -> 36 [style=solid label="QUOTEDSTRING"]
  61 -> 37 [style=solid label="BREAKLINE"]
  61 -> 38 [style=solid label="NUM"]
  61 -> 39 [style=solid label="OPENPAR"]
  61 -> 40 [style=solid label="NOT"]
  61 -> 41 [style=solid label="TRUE"]
  61 -> 42 [style=solid label="FALSE"]
  61 -> 88 [style=dashed label="not_expression"]
  61 -> 44 [style=dashed label="boolean"]
  61 -> 45 [style=dashed label="condition"]
  61 -> 46 [style=dashed label="expression"]
  61 -> 47 [style=dashed label="factor"]
  61 -> 48 [style=dashed label="token"]
  62 [label="62\nboolean -> boolean OROR . condition"]
  62 -> 35 [style=solid label="ID"]
  62 -> 36 [style=solid label="QUOTEDSTRING"]
  62 -> 37 [style=solid label="BREAKLINE"]
  62 -> 38 [style=solid label="NUM"]
  62 -> 39 [style=solid label="OPENPAR"]
  62 -> 40 [style=solid label="NOT"]
  62 -> 41 [style=solid label="TRUE"]
  62 -> 42 [style=solid label="FALSE"]
  62 -> 89 [style=dashed label="condition"]
  62 -> 46 [style=dashed label="expression"]
  62 -> 47 [style=dashed label="factor"]
  62 -> 48 [style=dashed label="token"]
  63 [label="63\nboolean -> boolean ANDAND . condition"]
  63 -> 35 [style=solid label="ID"]
  63 -> 36 [style=solid label="QUOTEDSTRING"]
  63 -> 37 [style=solid label="BREAKLINE"]
  63 -> 38 [style=solid label="NUM"]
  63 -> 39 [style=solid label="OPENPAR"]
  63 -> 40 [style=solid label="NOT"]
  63 -> 41 [style=solid label="TRUE"]
  63 -> 42 [style=solid label="FALSE"]
  63 -> 90 [style=dashed label="condition"]
  63 -> 46 [style=dashed label="expression"]
  63 -> 47 [style=dashed label="factor"]
  63 -> 48 [style=dashed label="token"]
  64 [label="64\ncondition -> condition LESS . expression"]
  64 -> 35 [style=solid label="ID"]
  64 -> 36 [style=solid label="QUOTEDSTRING"]
  64 -> 37 [style=solid label="BREAKLINE"]
  64 -> 38 [style=solid label="NUM"]
  64 -> 39 [style=solid label="OPENPAR"]
  64 -> 40 [style=solid label="NOT"]
  64 -> 41 [style=solid label="TRUE"]
  64 -> 42 [style=solid label="FALSE"]
  64 -> 91 [style=dashed label="expression"]
  64 -> 47 [style=dashed label="factor"]
  64 -> 48 [style=dashed label="token"]
  65 [label="65\ncondition -> condition LESSEQUAL . expression"]
  65 -> 35 [style=solid label="ID"]
  65 -> 36 [style=solid label="QUOTEDSTRING"]
  65 -> 37 [style=solid label="BREAKLINE"]
  65 -> 38 [style=solid label="NUM"]
  65 -> 39 [style=solid label="OPENPAR"]
  65 -> 40 [style=solid label="NOT"]
  65 -> 41 [style=solid label="TRUE"]
  65 -> 42 [style=solid label="FALSE"]
  65 -> 92 [style=dashed label="expression"]
  65 -> 47 [style=dashed label="factor"]
  65 -> 48 [style=dashed label="token"]
  66 [label="66\ncondition -> condition GREATER . expression"]
  66 -> 35 [style=solid label="ID"]
  66 -> 36 [style=solid label="QUOTEDSTRING"]
  66 -> 37 [style=solid label="BREAKLINE"]
  66 -> 38 [style=solid label="NUM"]
  66 -> 39 [style=solid label="OPENPAR"]
  66 -> 40 [style=solid label="NOT"]
  66 -> 41 [style=solid label="TRUE"]
  66 -> 42 [style=solid label="FALSE"]
  66 -> 93 [style=dashed label="expression"]
  66 -> 47 [style=dashed label="factor"]
  66 -> 48 [style=dashed label="token"]
  67 [label="67\ncondition -> condition GREATEREQUAL . expression"]
  67 -> 35 [style=solid label="ID"]
  67 -> 36 [style=solid label="QUOTEDSTRING"]
  67 -> 37 [style=solid label="BREAKLINE"]
  67 -> 38 [style=solid label="NUM"]
  67 -> 39 [style=solid label="OPENPAR"]
  67 -> 40 [style=solid label="NOT"]
  67 -> 41 [style=solid label="TRUE"]
  67 -> 42 [style=solid label="FALSE"]
  67 -> 94 [style=dashed label="expression"]
  67 -> 47 [style=dashed label="factor"]
  67 -> 48 [style=dashed label="token"]
  68 [label="68\ncondition -> condition EQUALEQUAL . expression"]
  68 -> 35 [style=solid label="ID"]
  68 -> 36 [style=solid label="QUOTEDSTRING"]
  68 -> 37 [style=solid label="BREAKLINE"]
  68 -> 38 [style=solid label="NUM"]
  68 -> 39 [style=solid label="OPENPAR"]
  68 -> 40 [style=solid label="NOT"]
  68 -> 41 [style=solid label="TRUE"]
  68 -> 42 [style=solid label="FALSE"]
  68 -> 95 [style=dashed label="expression"]
  68 -> 47 [style=dashed label="factor"]
  68 -> 48 [style=dashed label="token"]
  69 [label="69\ncondition -> condition NOTEQUAL . expression"]
  69 -> 35 [style=solid label="ID"]
  69 -> 36 [style=solid label="QUOTEDSTRING"]
  69 -> 37 [style=solid label="BREAKLINE"]
  69 -> 38 [style=solid label="NUM"]
  69 -> 39 [style=solid label="OPENPAR"]
  69 -> 40 [style=solid label="NOT"]
  69 -> 41 [style=solid label="TRUE"]
  69 -> 42 [style=solid label="FALSE"]
  69 -> 96 [style=dashed label="expression"]
  69 -> 47 [style=dashed label="factor"]
  69 -> 48 [style=dashed label="token"]
  70 [label="70\nexpression -> expression '+' . factor"]
  70 -> 35 [style=solid label="ID"]
  70 -> 36 [style=solid label="QUOTEDSTRING"]
  70 -> 37 [style=solid label="BREAKLINE"]
  70 -> 38 [style=solid label="NUM"]
  70 -> 39 [style=solid label="OPENPAR"]
  70 -> 40 [style=solid label="NOT"]
  70 -> 41 [style=solid label="TRUE"]
  70 -> 42 [style=solid label="FALSE"]
  70 -> 97 [style=dashed label="factor"]
  70 -> 48 [style=dashed label="token"]
  71 [label="71\nexpression -> expression '-' . factor"]
  71 -> 35 [style=solid label="ID"]
  71 -> 36 [style=solid label="QUOTEDSTRING"]
  71 -> 37 [style=solid label="BREAKLINE"]
  71 -> 38 [style=solid label="NUM"]
  71 -> 39 [style=solid label="OPENPAR"]
  71 -> 40 [style=solid label="NOT"]
  71 -> 41 [style=solid label="TRUE"]
  71 -> 42 [style=solid label="FALSE"]
  71 -> 98 [style=dashed label="factor"]
  71 -> 48 [style=dashed label="token"]
  72 [label="72\nfactor -> factor '*' . token"]
  72 -> 35 [style=solid label="ID"]
  72 -> 36 [style=solid label="QUOTEDSTRING"]
  72 -> 37 [style=solid label="BREAKLINE"]
  72 -> 38 [style=solid label="NUM"]
  72 -> 39 [style=solid label="OPENPAR"]
  72 -> 40 [style=solid label="NOT"]
  72 -> 41 [style=solid label="TRUE"]
  72 -> 42 [style=solid label="FALSE"]
  72 -> 99 [style=dashed label="token"]
  73 [label="73\nfactor -> factor '/' . token"]
  73 -> 35 [style=solid label="ID"]
  73 -> 36 [style=solid label="QUOTEDSTRING"]
  73 -> 37 [style=solid label="BREAKLINE"]
  73 -> 38 [style=solid label="NUM"]
  73 -> 39 [style=solid label="OPENPAR"]
  73 -> 40 [style=solid label="NOT"]
  73 -> 41 [style=solid label="TRUE"]
  73 -> 42 [style=solid label="FALSE"]
  73 -> 100 [style=dashed label="token"]
  74 [label="74\nassignment -> ID DOT ID EQUAL . not_expression"]
  74 -> 35 [style=solid label="ID"]
  74 -> 36 [style=solid label="QUOTEDSTRING"]
  74 -> 37 [style=solid label="BREAKLINE"]
  74 -> 38 [style=solid label="NUM"]
  74 -> 39 [style=solid label="OPENPAR"]
  74 -> 40 [style=solid label="NOT"]
  74 -> 41 [style=solid label="TRUE"]
  74 -> 42 [style=solid label="FALSE"]
  74 -> 101 [style=dashed label="not_expression"]
  74 -> 44 [style=dashed label="boolean"]
  74 -> 45 [style=dashed label="condition"]
  74 -> 46 [style=dashed label="expression"]
  74 -> 47 [style=dashed label="factor"]
  74 -> 48 [style=dashed label="token"]
  75 [label="75\nassignment -> ID OPENHARD not_expression CLOSEHARD . EQUAL not_expression"]
  75 -> 102 [style=solid label="EQUAL"]
  76 [label="76\nobject -> OPENBRACE . definition_list CLOSEBRACE"]
  76 -> 103 [style=dashed label="definition_list"]
  76 -> 104 [style=dashed label="newline_opt"]
  77 [label="77\narray -> OPENHARD . member_list CLOSEHARD"]
  77 -> 105 [style=dashed label="member_list"]
  77 -> 106 [style=dashed label="newline_opt"]
  78 [label="78\ndeclaration -> VAR ID EQUAL object ."]
  79 [label="79\ndeclaration -> VAR ID EQUAL array ."]
  80 [label="80\ndeclaration -> VAR ID EQUAL not_expression ."]
  81 [label="81\nstatement -> DOC DOT WRITE OPENPAR . arg_list CLOSEPAR separator"]
  81 -> 35 [style=solid label="ID"]
  81 -> 36 [style=solid label="QUOTEDSTRING"]
  81 -> 37 [style=solid label="BREAKLINE"]
  81 -> 38 [style=solid label="NUM"]
  81 -> 39 [style=solid label="OPENPAR"]
  81 -> 40 [style=solid label="NOT"]
  81 -> 41 [style=solid label="TRUE"]
  81 -> 42 [style=solid label="FALSE"]
  81 -> 107 [style=dashed label="arg_list"]
  81 -> 108 [style=dashed label="argument"]
  81 -> 109 [style=dashed label="not_expression"]
  81 -> 44 [style=dashed label="boolean"]
  81 -> 45 [style=dashed label="condition"]
  81 -> 46 [style=dashed label="expression"]
  81 -> 47 [style=dashed label="factor"]
  81 -> 48 [style=dashed label="token"]
  82 [label="82\nif_expression -> IF OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt\nif_expression -> IF OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt"]
  82 -> 110 [style=solid label="OPENBRACE"]
  83 [label="83\nloop -> WHILE OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE OPENPAR not_expression CLOSEPAR . OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE"]
  83 -> 111 [style=solid label="OPENBRACE"]
  84 [label="84\nloop -> DO OPENBRACE NEWLINE $@7 . statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  84 -> 3 [style=solid label="ID"]
  84 -> 4 [style=solid label="VAR"]
  84 -> 5 [style=solid label="NEWLINE"]
  84 -> 6 [style=solid label="DOC"]
  84 -> 7 [style=solid label="IF"]
  84 -> 8 [style=solid label="WHILE"]
  84 -> 9 [style=solid label="BREAK"]
  84 -> 10 [style=solid label="CONTINUE"]
  84 -> 11 [style=solid label="DO"]
  84 -> 112 [style=dashed label="statements"]
  84 -> 13 [style=dashed label="statement"]
  84 -> 14 [style=dashed label="declaration"]
  84 -> 15 [style=dashed label="assignment"]
  84 -> 16 [style=dashed label="if_expression"]
  84 -> 17 [style=dashed label="loop"]
  85 [label="85\ntoken -> ID DOT ID ."]
  86 [label="86\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor\ntoken -> ID OPENHARD expression . CLOSEHARD"]
  86 -> 113 [style=solid label="CLOSEHARD"]
  86 -> 70 [style=solid label="'+'"]
  86 -> 71 [style=solid label="'-'"]
  87 [label="87\ntoken -> OPENPAR not_expression CLOSEPAR ."]
  88 [label="88\ntoken -> NOT OPENPAR not_expression . CLOSEPAR"]
  88 -> 114 [style=solid label="CLOSEPAR"]
  89 [label="89\nboolean -> boolean OROR condition .\ncondition -> condition . LESS expression\ncondition -> condition . LESSEQUAL expression\ncondition -> condition . GREATER expression\ncondition -> condition . GREATEREQUAL expression\ncondition -> condition . EQUALEQUAL expression\ncondition -> condition . NOTEQUAL expression"]
  89 -> 64 [style=solid label="LESS"]
  89 -> 65 [style=solid label="LESSEQUAL"]
  89 -> 66 [style=solid label="GREATER"]
  89 -> 67 [style=solid label="GREATEREQUAL"]
  89 -> 68 [style=solid label="EQUALEQUAL"]
  89 -> 69 [style=solid label="NOTEQUAL"]
  90 [label="90\nboolean -> boolean ANDAND condition .\ncondition -> condition . LESS expression\ncondition -> condition . LESSEQUAL expression\ncondition -> condition . GREATER expression\ncondition -> condition . GREATEREQUAL expression\ncondition -> condition . EQUALEQUAL expression\ncondition -> condition . NOTEQUAL expression"]
  90 -> 64 [style=solid label="LESS"]
  90 -> 65 [style=solid label="LESSEQUAL"]
  90 -> 66 [style=solid label="GREATER"]
  90 -> 67 [style=solid label="GREATEREQUAL"]
  90 -> 68 [style=solid label="EQUALEQUAL"]
  90 -> 69 [style=solid label="NOTEQUAL"]
  91 [label="91\ncondition -> condition LESS expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  91 -> 70 [style=solid label="'+'"]
  91 -> 71 [style=solid label="'-'"]
  92 [label="92\ncondition -> condition LESSEQUAL expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  92 -> 70 [style=solid label="'+'"]
  92 -> 71 [style=solid label="'-'"]
  93 [label="93\ncondition -> condition GREATER expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  93 -> 70 [style=solid label="'+'"]
  93 -> 71 [style=solid label="'-'"]
  94 [label="94\ncondition -> condition GREATEREQUAL expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  94 -> 70 [style=solid label="'+'"]
  94 -> 71 [style=solid label="'-'"]
  95 [label="95\ncondition -> condition EQUALEQUAL expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  95 -> 70 [style=solid label="'+'"]
  95 -> 71 [style=solid label="'-'"]
  96 [label="96\ncondition -> condition NOTEQUAL expression .\nexpression -> expression . '+' factor\nexpression -> expression . '-' factor"]
  96 -> 70 [style=solid label="'+'"]
  96 -> 71 [style=solid label="'-'"]
  97 [label="97\nexpression -> expression '+' factor .\nfactor -> factor . '*' token\nfactor -> factor . '/' token"]
  97 -> 72 [style=solid label="'*'"]
  97 -> 73 [style=solid label="'/'"]
  98 [label="98\nexpression -> expression '-' factor .\nfactor -> factor . '*' token\nfactor -> factor . '/' token"]
  98 -> 72 [style=solid label="'*'"]
  98 -> 73 [style=solid label="'/'"]
  99 [label="99\nfactor -> factor '*' token ."]
  100 [label="100\nfactor -> factor '/' token ."]
  101 [label="101\nassignment -> ID DOT ID EQUAL not_expression ."]
  102 [label="102\nassignment -> ID OPENHARD not_expression CLOSEHARD EQUAL . not_expression"]
  102 -> 35 [style=solid label="ID"]
  102 -> 36 [style=solid label="QUOTEDSTRING"]
  102 -> 37 [style=solid label="BREAKLINE"]
  102 -> 38 [style=solid label="NUM"]
  102 -> 39 [style=solid label="OPENPAR"]
  102 -> 40 [style=solid label="NOT"]
  102 -> 41 [style=solid label="TRUE"]
  102 -> 42 [style=solid label="FALSE"]
  102 -> 115 [style=dashed label="not_expression"]
  102 -> 44 [style=dashed label="boolean"]
  102 -> 45 [style=dashed label="condition"]
  102 -> 46 [style=dashed label="expression"]
  102 -> 47 [style=dashed label="factor"]
  102 -> 48 [style=dashed label="token"]
  103 [label="103\nobject -> OPENBRACE definition_list . CLOSEBRACE\ndefinition_list -> definition_list . COMMA newline_opt definition newline_opt"]
  103 -> 116 [style=solid label="COMMA"]
  103 -> 117 [style=solid label="CLOSEBRACE"]
  104 [label="104\ndefinition_list -> newline_opt . definition newline_opt\nnewline_opt -> newline_opt . NEWLINE"]
  104 -> 118 [style=solid label="ID"]
  104 -> 119 [style=solid label="NEWLINE"]
  104 -> 120 [style=dashed label="definition"]
  105 [label="105\narray -> OPENHARD member_list . CLOSEHARD\nmember_list -> member_list . COMMA newline_opt not_expression newline_opt"]
  105 -> 121 [style=solid label="COMMA"]
  105 -> 122 [style=solid label="CLOSEHARD"]
  106 [label="106\nmember_list -> newline_opt . not_expression newline_opt\nnewline_opt -> newline_opt . NEWLINE"]
  106 -> 35 [style=solid label="ID"]
  106 -> 36 [style=solid label="QUOTEDSTRING"]
  106 -> 37 [style=solid label="BREAKLINE"]
  106 -> 38 [style=solid label="NUM"]
  106 -> 119 [style=solid label="NEWLINE"]
  106 -> 39 [style=solid label="OPENPAR"]
  106 -> 40 [style=solid label="NOT"]
  106 -> 41 [style=solid label="TRUE"]
  106 -> 42 [style=solid label="FALSE"]
  106 -> 123 [style=dashed label="not_expression"]
  106 -> 44 [style=dashed label="boolean"]
  106 -> 45 [style=dashed label="condition"]
  106 -> 46 [style=dashed label="expression"]
  106 -> 47 [style=dashed label="factor"]
  106 -> 48 [style=dashed label="token"]
  107 [label="107\nstatement -> DOC DOT WRITE OPENPAR arg_list . CLOSEPAR separator\narg_list -> arg_list . COMMA argument"]
  107 -> 124 [style=solid label="CLOSEPAR"]
  107 -> 125 [style=solid label="COMMA"]
  108 [label="108\narg_list -> argument ."]
  109 [label="109\nargument -> not_expression ."]
  110 [label="110\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@1 statements CLOSEBRACE else_opt\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@2 CLOSEBRACE else_opt"]
  110 -> 126 [style=solid label="NEWLINE"]
  111 [label="111\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE . NEWLINE $@6 CLOSEBRACE NEWLINE"]
  111 -> 127 [style=solid label="NEWLINE"]
  112 [label="112\nstatements -> statements . statement\nloop -> DO OPENBRACE NEWLINE $@7 statements . CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  112 -> 3 [style=solid label="ID"]
  112 -> 4 [style=solid label="VAR"]
  112 -> 5 [style=solid label="NEWLINE"]
  112 -> 6 [style=solid label="DOC"]
  112 -> 128 [style=solid label="CLOSEBRACE"]
  112 -> 7 [style=solid label="IF"]
  112 -> 8 [style=solid label="WHILE"]
  112 -> 9 [style=solid label="BREAK"]
  112 -> 10 [style=solid label="CONTINUE"]
  112 -> 11 [style=solid label="DO"]
  112 -> 32 [style=dashed label="statement"]
  112 -> 14 [style=dashed label="declaration"]
  112 -> 15 [style=dashed label="assignment"]
  112 -> 16 [style=dashed label="if_expression"]
  112 -> 17 [style=dashed label="loop"]
  113 [label="113\ntoken -> ID OPENHARD expression CLOSEHARD ."]
  114 [label="114\ntoken -> NOT OPENPAR not_expression CLOSEPAR ."]
  115 [label="115\nassignment -> ID OPENHARD not_expression CLOSEHARD EQUAL not_expression ."]
  116 [label="116\ndefinition_list -> definition_list COMMA . newline_opt definition newline_opt"]
  116 -> 129 [style=dashed label="newline_opt"]
  117 [label="117\nobject -> OPENBRACE definition_list CLOSEBRACE ."]
  118 [label="118\ndefinition -> ID . COLON not_expression"]
  118 -> 130 [style=solid label="COLON"]
  119 [label="119\nnewline_opt -> newline_opt NEWLINE ."]
  120 [label="120\ndefinition_list -> newline_opt definition . newline_opt"]
  120 -> 131 [style=dashed label="newline_opt"]
  121 [label="121\nmember_list -> member_list COMMA . newline_opt not_expression newline_opt"]
  121 -> 132 [style=dashed label="newline_opt"]
  122 [label="122\narray -> OPENHARD member_list CLOSEHARD ."]
  123 [label="123\nmember_list -> newline_opt not_expression . newline_opt"]
  123 -> 133 [style=dashed label="newline_opt"]
  124 [label="124\nstatement -> DOC DOT WRITE OPENPAR arg_list CLOSEPAR . separator"]
  124 -> 26 [style=solid label="SEMICOLON"]
  124 -> 27 [style=solid label="NEWLINE"]
  124 -> 134 [style=dashed label="separator"]
  125 [label="125\narg_list -> arg_list COMMA . argument"]
  125 -> 35 [style=solid label="ID"]
  125 -> 36 [style=solid label="QUOTEDSTRING"]
  125 -> 37 [style=solid label="BREAKLINE"]
  125 -> 38 [style=solid label="NUM"]
  125 -> 39 [style=solid label="OPENPAR"]
  125 -> 40 [style=solid label="NOT"]
  125 -> 41 [style=solid label="TRUE"]
  125 -> 42 [style=solid label="FALSE"]
  125 -> 135 [style=dashed label="argument"]
  125 -> 109 [style=dashed label="not_expression"]
  125 -> 44 [style=dashed label="boolean"]
  125 -> 45 [style=dashed label="condition"]
  125 -> 46 [style=dashed label="expression"]
  125 -> 47 [style=dashed label="factor"]
  125 -> 48 [style=dashed label="token"]
  126 [label="126\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@1 statements CLOSEBRACE else_opt\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@2 CLOSEBRACE else_opt"]
  126 -> 136 [style=dashed label="$@1"]
  126 -> 137 [style=dashed label="$@2"]
  127 [label="127\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@5 statements CLOSEBRACE NEWLINE\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE . $@6 CLOSEBRACE NEWLINE"]
  127 -> 138 [style=dashed label="$@5"]
  127 -> 139 [style=dashed label="$@6"]
  128 [label="128\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE . NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  128 -> 140 [style=solid label="NEWLINE"]
  129 [label="129\ndefinition_list -> definition_list COMMA newline_opt . definition newline_opt\nnewline_opt -> newline_opt . NEWLINE"]
  129 -> 118 [style=solid label="ID"]
  129 -> 119 [style=solid label="NEWLINE"]
  129 -> 141 [style=dashed label="definition"]
  130 [label="130\ndefinition -> ID COLON . not_expression"]
  130 -> 35 [style=solid label="ID"]
  130 -> 36 [style=solid label="QUOTEDSTRING"]
  130 -> 37 [style=solid label="BREAKLINE"]
  130 -> 38 [style=solid label="NUM"]
  130 -> 39 [style=solid label="OPENPAR"]
  130 -> 40 [style=solid label="NOT"]
  130 -> 41 [style=solid label="TRUE"]
  130 -> 42 [style=solid label="FALSE"]
  130 -> 142 [style=dashed label="not_expression"]
  130 -> 44 [style=dashed label="boolean"]
  130 -> 45 [style=dashed label="condition"]
  130 -> 46 [style=dashed label="expression"]
  130 -> 47 [style=dashed label="factor"]
  130 -> 48 [style=dashed label="token"]
  131 [label="131\ndefinition_list -> newline_opt definition newline_opt .\nnewline_opt -> newline_opt . NEWLINE"]
  131 -> 119 [style=solid label="NEWLINE"]
  132 [label="132\nmember_list -> member_list COMMA newline_opt . not_expression newline_opt\nnewline_opt -> newline_opt . NEWLINE"]
  132 -> 35 [style=solid label="ID"]
  132 -> 36 [style=solid label="QUOTEDSTRING"]
  132 -> 37 [style=solid label="BREAKLINE"]
  132 -> 38 [style=solid label="NUM"]
  132 -> 119 [style=solid label="NEWLINE"]
  132 -> 39 [style=solid label="OPENPAR"]
  132 -> 40 [style=solid label="NOT"]
  132 -> 41 [style=solid label="TRUE"]
  132 -> 42 [style=solid label="FALSE"]
  132 -> 143 [style=dashed label="not_expression"]
  132 -> 44 [style=dashed label="boolean"]
  132 -> 45 [style=dashed label="condition"]
  132 -> 46 [style=dashed label="expression"]
  132 -> 47 [style=dashed label="factor"]
  132 -> 48 [style=dashed label="token"]
  133 [label="133\nmember_list -> newline_opt not_expression newline_opt .\nnewline_opt -> newline_opt . NEWLINE"]
  133 -> 119 [style=solid label="NEWLINE"]
  134 [label="134\nstatement -> DOC DOT WRITE OPENPAR arg_list CLOSEPAR separator ."]
  135 [label="135\narg_list -> arg_list COMMA argument ."]
  136 [label="136\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 . statements CLOSEBRACE else_opt"]
  136 -> 3 [style=solid label="ID"]
  136 -> 4 [style=solid label="VAR"]
  136 -> 5 [style=solid label="NEWLINE"]
  136 -> 6 [style=solid label="DOC"]
  136 -> 7 [style=solid label="IF"]
  136 -> 8 [style=solid label="WHILE"]
  136 -> 9 [style=solid label="BREAK"]
  136 -> 10 [style=solid label="CONTINUE"]
  136 -> 11 [style=solid label="DO"]
  136 -> 144 [style=dashed label="statements"]
  136 -> 13 [style=dashed label="statement"]
  136 -> 14 [style=dashed label="declaration"]
  136 -> 15 [style=dashed label="assignment"]
  136 -> 16 [style=dashed label="if_expression"]
  136 -> 17 [style=dashed label="loop"]
  137 [label="137\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 . CLOSEBRACE else_opt"]
  137 -> 145 [style=solid label="CLOSEBRACE"]
  138 [label="138\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 . statements CLOSEBRACE NEWLINE"]
  138 -> 3 [style=solid label="ID"]
  138 -> 4 [style=solid label="VAR"]
  138 -> 5 [style=solid label="NEWLINE"]
  138 -> 6 [style=solid label="DOC"]
  138 -> 7 [style=solid label="IF"]
  138 -> 8 [style=solid label="WHILE"]
  138 -> 9 [style=solid label="BREAK"]
  138 -> 10 [style=solid label="CONTINUE"]
  138 -> 11 [style=solid label="DO"]
  138 -> 146 [style=dashed label="statements"]
  138 -> 13 [style=dashed label="statement"]
  138 -> 14 [style=dashed label="declaration"]
  138 -> 15 [style=dashed label="assignment"]
  138 -> 16 [style=dashed label="if_expression"]
  138 -> 17 [style=dashed label="loop"]
  139 [label="139\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 . CLOSEBRACE NEWLINE"]
  139 -> 147 [style=solid label="CLOSEBRACE"]
  140 [label="140\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE . $@8 WHILE OPENPAR not_expression CLOSEPAR separator"]
  140 -> 148 [style=dashed label="$@8"]
  141 [label="141\ndefinition_list -> definition_list COMMA newline_opt definition . newline_opt"]
  141 -> 149 [style=dashed label="newline_opt"]
  142 [label="142\ndefinition -> ID COLON not_expression ."]
  143 [label="143\nmember_list -> member_list COMMA newline_opt not_expression . newline_opt"]
  143 -> 150 [style=dashed label="newline_opt"]
  144 [label="144\nstatements -> statements . statement\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements . CLOSEBRACE else_opt"]
  144 -> 3 [style=solid label="ID"]
  144 -> 4 [style=solid label="VAR"]
  144 -> 5 [style=solid label="NEWLINE"]
  144 -> 6 [style=solid label="DOC"]
  144 -> 151 [style=solid label="CLOSEBRACE"]
  144 -> 7 [style=solid label="IF"]
  144 -> 8 [style=solid label="WHILE"]
  144 -> 9 [style=solid label="BREAK"]
  144 -> 10 [style=solid label="CONTINUE"]
  144 -> 11 [style=solid label="DO"]
  144 -> 32 [style=dashed label="statement"]
  144 -> 14 [style=dashed label="declaration"]
  144 -> 15 [style=dashed label="assignment"]
  144 -> 16 [style=dashed label="if_expression"]
  144 -> 17 [style=dashed label="loop"]
  145 [label="145\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE . else_opt"]
  145 -> 152 [style=solid label="ELSE"]
  145 -> 153 [style=dashed label="else_opt"]
  146 [label="146\nstatements -> statements . statement\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements . CLOSEBRACE NEWLINE"]
  146 -> 3 [style=solid label="ID"]
  146 -> 4 [style=solid label="VAR"]
  146 -> 5 [style=solid label="NEWLINE"]
  146 -> 6 [style=solid label="DOC"]
  146 -> 154 [style=solid label="CLOSEBRACE"]
  146 -> 7 [style=solid label="IF"]
  146 -> 8 [style=solid label="WHILE"]
  146 -> 9 [style=solid label="BREAK"]
  146 -> 10 [style=solid label="CONTINUE"]
  146 -> 11 [style=solid label="DO"]
  146 -> 32 [style=dashed label="statement"]
  146 -> 14 [style=dashed label="declaration"]
  146 -> 15 [style=dashed label="assignment"]
  146 -> 16 [style=dashed label="if_expression"]
  146 -> 17 [style=dashed label="loop"]
  147 [label="147\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE . NEWLINE"]
  147 -> 155 [style=solid label="NEWLINE"]
  148 [label="148\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 . WHILE OPENPAR not_expression CLOSEPAR separator"]
  148 -> 156 [style=solid label="WHILE"]
  149 [label="149\ndefinition_list -> definition_list COMMA newline_opt definition newline_opt .\nnewline_opt -> newline_opt . NEWLINE"]
  149 -> 119 [style=solid label="NEWLINE"]
  150 [label="150\nmember_list -> member_list COMMA newline_opt not_expression newline_opt .\nnewline_opt -> newline_opt . NEWLINE"]
  150 -> 119 [style=solid label="NEWLINE"]
  151 [label="151\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE . else_opt"]
  151 -> 152 [style=solid label="ELSE"]
  151 -> 157 [style=dashed label="else_opt"]
  152 [label="152\nelse_opt -> ELSE . if_expression\nelse_opt -> ELSE . OPENBRACE NEWLINE $@3 statements CLOSEBRACE NEWLINE\nelse_opt -> ELSE . OPENBRACE NEWLINE $@4 CLOSEBRACE NEWLINE"]
  152 -> 158 [style=solid label="OPENBRACE"]
  152 -> 7 [style=solid label="IF"]
  152 -> 159 [style=dashed label="if_expression"]
  153 [label="153\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@2 CLOSEBRACE else_opt ."]
  154 [label="154\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE . NEWLINE"]
  154 -> 160 [style=solid label="NEWLINE"]
  155 [label="155\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@6 CLOSEBRACE NEWLINE ."]
  156 [label="156\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE . OPENPAR not_expression CLOSEPAR separator"]
  156 -> 161 [style=solid label="OPENPAR"]
  157 [label="157\nif_expression -> IF OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@1 statements CLOSEBRACE else_opt ."]
  158 [label="158\nelse_opt -> ELSE OPENBRACE . NEWLINE $@3 statements CLOSEBRACE NEWLINE\nelse_opt -> ELSE OPENBRACE . NEWLINE $@4 CLOSEBRACE NEWLINE"]
  158 -> 162 [style=solid label="NEWLINE"]
  159 [label="159\nelse_opt -> ELSE if_expression ."]
  160 [label="160\nloop -> WHILE OPENPAR not_expression CLOSEPAR OPENBRACE NEWLINE $@5 statements CLOSEBRACE NEWLINE ."]
  161 [label="161\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR . not_expression CLOSEPAR separator"]
  161 -> 35 [style=solid label="ID"]
  161 -> 36 [style=solid label="QUOTEDSTRING"]
  161 -> 37 [style=solid label="BREAKLINE"]
  161 -> 38 [style=solid label="NUM"]
  161 -> 39 [style=solid label="OPENPAR"]
  161 -> 40 [style=solid label="NOT"]
  161 -> 41 [style=solid label="TRUE"]
  161 -> 42 [style=solid label="FALSE"]
  161 -> 163 [style=dashed label="not_expression"]
  161 -> 44 [style=dashed label="boolean"]
  161 -> 45 [style=dashed label="condition"]
  161 -> 46 [style=dashed label="expression"]
  161 -> 47 [style=dashed label="factor"]
  161 -> 48 [style=dashed label="token"]
  162 [label="162\nelse_opt -> ELSE OPENBRACE NEWLINE . $@3 statements CLOSEBRACE NEWLINE\nelse_opt -> ELSE OPENBRACE NEWLINE . $@4 CLOSEBRACE NEWLINE"]
  162 -> 164 [style=dashed label="$@3"]
  162 -> 165 [style=dashed label="$@4"]
  163 [label="163\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression . CLOSEPAR separator"]
  163 -> 166 [style=solid label="CLOSEPAR"]
  164 [label="164\nelse_opt -> ELSE OPENBRACE NEWLINE $@3 . statements CLOSEBRACE NEWLINE"]
  164 -> 3 [style=solid label="ID"]
  164 -> 4 [style=solid label="VAR"]
  164 -> 5 [style=solid label="NEWLINE"]
  164 -> 6 [style=solid label="DOC"]
  164 -> 7 [style=solid label="IF"]
  164 -> 8 [style=solid label="WHILE"]
  164 -> 9 [style=solid label="BREAK"]
  164 -> 10 [style=solid label="CONTINUE"]
  164 -> 11 [style=solid label="DO"]
  164 -> 167 [style=dashed label="statements"]
  164 -> 13 [style=dashed label="statement"]
  164 -> 14 [style=dashed label="declaration"]
  164 -> 15 [style=dashed label="assignment"]
  164 -> 16 [style=dashed label="if_expression"]
  164 -> 17 [style=dashed label="loop"]
  165 [label="165\nelse_opt -> ELSE OPENBRACE NEWLINE $@4 . CLOSEBRACE NEWLINE"]
  165 -> 168 [style=solid label="CLOSEBRACE"]
  166 [label="166\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR . separator"]
  166 -> 26 [style=solid label="SEMICOLON"]
  166 -> 27 [style=solid label="NEWLINE"]
  166 -> 169 [style=dashed label="separator"]
  167 [label="167\nstatements -> statements . statement\nelse_opt -> ELSE OPENBRACE NEWLINE $@3 statements . CLOSEBRACE NEWLINE"]
  167 -> 3 [style=solid label="ID"]
  167 -> 4 [style=solid label="VAR"]
  167 -> 5 [style=solid label="NEWLINE"]
  167 -> 6 [style=solid label="DOC"]
  167 -> 170 [style=solid label="CLOSEBRACE"]
  167 -> 7 [style=solid label="IF"]
  167 -> 8 [style=solid label="WHILE"]
  167 -> 9 [style=solid label="BREAK"]
  167 -> 10 [style=solid label="CONTINUE"]
  167 -> 11 [style=solid label="DO"]
  167 -> 32 [style=dashed label="statement"]
  167 -> 14 [style=dashed label="declaration"]
  167 -> 15 [style=dashed label="assignment"]
  167 -> 16 [style=dashed label="if_expression"]
  167 -> 17 [style=dashed label="loop"]
  168 [label="168\nelse_opt -> ELSE OPENBRACE NEWLINE $@4 CLOSEBRACE . NEWLINE"]
  168 -> 171 [style=solid label="NEWLINE"]
  169 [label="169\nloop -> DO OPENBRACE NEWLINE $@7 statements CLOSEBRACE NEWLINE $@8 WHILE OPENPAR not_expression CLOSEPAR separator ."]
  170 [label="170\nelse_opt -> ELSE OPENBRACE NEWLINE $@3 statements CLOSEBRACE . NEWLINE"]
  170 -> 172 [style=solid label="NEWLINE"]
  171 [label="171\nelse_opt -> ELSE OPENBRACE NEWLINE $@4 CLOSEBRACE NEWLINE ."]
  172 [label="172\nelse_opt -> ELSE OPENBRACE NEWLINE $@3 statements CLOSEBRACE NEWLINE ."]
}
